import asyncio
import logging
from typing import List, Optional, Union, Callable, Any

from aiogram import Bot
from aiogram.types import Message

from config import config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


async def delay(seconds: float) -> None:
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
    
    Args:
        seconds: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
    """
    await asyncio.sleep(seconds)


async def edit_message_animation(
    message: Message,
    frames: List[str],
    interval: float = config.ANIMATION_DELAY_SHORT,
    final_text: Optional[str] = None,
    parse_mode: str = "HTML"
) -> Message:
    """–ê–Ω–∏–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω—è—è –µ–≥–æ —Ç–µ–∫—Å—Ç.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        frames: –°–ø–∏—Å–æ–∫ –∫–∞–¥—Ä–æ–≤ (—Ç–µ–∫—Å—Ç–æ–≤) –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        final_text: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–∞–¥—Ä–∞).
        parse_mode: –†–µ–∂–∏–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –∞–Ω–∏–º–∞—Ü–∏–∏
        for frame in frames:
            await message.edit_text(frame, parse_mode=parse_mode)
            await delay(interval)
        
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ
        if final_text and final_text != frames[-1]:
            return await message.edit_text(final_text, parse_mode=parse_mode)
        
        return message
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
        if final_text:
            try:
                return await message.edit_text(final_text, parse_mode=parse_mode)
            except Exception as inner_e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {inner_e}")
        
        return message


async def animate_thinking(
    message: Message,
    frames_count: int = 5,
    interval: float = config.ANIMATION_DELAY_SHORT
) -> Message:
    """–°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        frames_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–∞–¥—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    frames = [
        f"<b>ü§î –†–∞–∑–º—ã—à–ª—è—é...</b>\n{'.' * (i % 4 + 1)}" 
        for i in range(frames_count)
    ]
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    return await edit_message_animation(
        message=message,
        frames=frames,
        interval=interval
    )


async def animate_preparing_reading(
    message: Message,
    frames_count: int = 5,
    interval: float = config.ANIMATION_DELAY_MEDIUM
) -> Message:
    """–°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –≥–∞–¥–∞–Ω–∏—é.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        frames_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–∞–¥—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    frames = [
        f"<b>üîÆ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≥–∞–¥–∞–Ω–∏—é...</b>\n{'.' * (i % 4 + 1)}" 
        for i in range(frames_count)
    ]
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    return await edit_message_animation(
        message=message,
        frames=frames,
        interval=interval
    )


async def animate_selecting_card(
    message: Message,
    card_name: str,
    frames_count: int = 5,
    interval: float = config.ANIMATION_DELAY_MEDIUM
) -> Message:
    """–°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        card_name: –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã.
        frames_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–∞–¥—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    frames = [
        f"<b>üîÆ –í—ã–±–æ—Ä –∫–∞—Ä—Ç—ã...</b>\n{'.' * (i % 4 + 1)}" 
        for i in range(frames_count - 1)
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–¥—Ä —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã
    frames.append(f"<b>üîÆ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ä—Ç–∞:</b> <i>{card_name}</i>")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    return await edit_message_animation(
        message=message,
        frames=frames,
        interval=interval
    )


async def tarot_card_animation(
    message: Message,
    final_text: str,
    card_name: str = "–ö–∞—Ä—Ç–∞ –¢–∞—Ä–æ",
    frames_count: int = 5,
    interval: float = config.ANIMATION_DELAY_MEDIUM
) -> Message:
    """–°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        final_text: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
        card_name: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        frames_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–∞–¥—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    frames = [
        f"<b>üîÆ –í—ã–±–æ—Ä –∫–∞—Ä—Ç—ã...</b>\n{'.' * (i % 4 + 1)}" 
        for i in range(frames_count - 1)
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–¥—Ä —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã
    frames.append(f"<b>üîÆ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ä—Ç–∞:</b> <i>{card_name}</i>")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    return await edit_message_animation(
        message=message,
        frames=frames,
        interval=interval,
        final_text=final_text
    )


async def reading_preparation_animation(
    message: Message,
    final_text: str,
    frames_count: int = 6,
    interval: float = config.ANIMATION_DELAY_MEDIUM
) -> Message:
    """–°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –≥–∞–¥–∞–Ω–∏—é.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        final_text: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
        frames_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    # –≠–º–æ–¥–∑–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    emojis = ["üîÆ", "üßô‚Äç‚ôÇÔ∏è", "‚ú®", "üç∏", "ü•É", "üç∑", "üçπ"]
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞–¥—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    frames = [
        f"<b>{emojis[i % len(emojis)]} –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≥–∞–¥–∞–Ω–∏—é...</b>\n{'.' * (i % 4 + 1)}" 
        for i in range(frames_count - 1)
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–∞–¥—Ä
    frames.append("<b>‚ú® –ì–∞–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!</b>")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    return await edit_message_animation(
        message=message,
        frames=frames,
        interval=interval,
        final_text=final_text
    )


async def thinking_animation(
    message: Message,
    final_text: str,
    prefix: str = "–î—É–º–∞—é",
    frames_count: int = 5,
    interval: float = config.ANIMATION_DELAY_SHORT
) -> Message:
    """–°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é "–¥—É–º–∞—é—â–µ–≥–æ" —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        final_text: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
        prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        frames_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏.
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        
    Returns:
        –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–∞–¥—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    frames = [
        f"<b>{prefix}{'.' * (i % 4 + 1)}</b>" 
        for i in range(frames_count)
    ]
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    return await edit_message_animation(
        message=message,
        frames=frames,
        interval=interval,
        final_text=final_text
    )